<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="comboBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>